---
---

@charset "UTF-8";

body
{
    margin: 0;
    padding: 0;
    font-size: 25px;
    font-family: helvetica;
    line-height: 1.3;
    color:#101a31;
}
.nyheterGrid
{
    display: flex;
    align-content: center;
    align-items: flex-start;
    flex-wrap: wrap;
    justify-content: center;
    padding: 5rem;
}
.newsBox
{    
    width: 25rem;
    //background: #d6d6d6;
    height: 20rem;      
    display: flex;
    align-content: center;
    align-items: stretch;
    background-repeat: no-repeat;
    background-size: cover;
    overflow: hidden;
    color: #101a31;
}

.innerNewsBox
{
    margin: auto; 
    //background-color: #000000d2; 
    padding-left: 1rem; 
    padding-right: 1rem; 
    width: 100%;
    height: 100%;
    display: flex;    
    flex-direction: column;
}
.innerNewsBox h2
{
    margin: 0;
    margin-top: 1rem;
}
.newsImage
{    
    background-repeat: no-repeat; 
    background-size: cover; 
    overflow: hidden;
    width: 100%;
    height: 12rem;
    background-color: #ff8400;
    background-blend-mode: multiply;
}
.newsBox:hover .newsImage
{
    background-color: #fff;
    background-blend-mode: normal;
}
.innerNewsBox div
{
    margin: auto;
}
.links
{
    margin: 2rem;
    display: flex;
    justify-content: center;
    align-items: flex-end;
    align-content: stretch;
    flex-direction: row;
}
a#linkDark
{
    color: #101a31;
    font-size: 1.2rem;
    margin: 2rem;    
    text-transform: uppercase;
}

.active#linkDark
{
    text-decoration: underline;
}


$duration: .2s;
$distance: 30px;
$easeOutBack: cubic-bezier(0.175, 0.885, 0.320, 1.475);

a#linkDark{
  position: relative;
  text-decoration: none;

   &:before,
    &:after {
        content: '';
        position: absolute;
        bottom: -10;
        left: 0; right: 0;
        height: 2px;
        background-color: #101a31;
    }
    &:before {
        opacity: 0;
        transform: translateY(- $distance);
        transition: transform 0s $easeOutBack, opacity 0s;
    }
    &:after {
        opacity: 0;
        transform: translateY($distance/1);
        transition: transform $duration $easeOutBack, opacity $duration;
    }
    &:hover,
    &:focus {
        &:before,
        &:after {
            opacity: 1;
            transform: translateY(0);
        }
        &:before {
            transition: transform $duration $easeOutBack, opacity $duration;
        }
        &:after {
            transition: transform 0s $duration $easeOutBack, opacity 0s $duration;
        }
    }
}
